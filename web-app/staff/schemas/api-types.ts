/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/practice/{id}/manage": {
    get: operations["retrievePracticeModel"];
    put: operations["updatePracticeModel"];
    delete: operations["destroyPracticeModel"];
    patch: operations["partialUpdatePracticeModel"];
  };
  "/practices": {
    get: operations["listPracticeModels"];
  };
  "/practices/search": {
    get: operations["listPracticeModels"];
  };
  "/practices/autocomplete": {
    get: operations["retrievePracticeModel"];
  };
  "/practices/find/{slug}": {
    get: operations["retrievePracticeModel"];
  };
  "/practices/get/org-id/{org_id}": {
    get: operations["retrievePracticeModel"];
  };
  "/feature-flags": {
    get: operations["retrievePracticeModel"];
  };
  "/patient/manage": {
    get: operations["retrievePatientModel"];
    put: operations["updatePatientModel"];
    post: operations["createPatientModel"];
    delete: operations["destroyPatientModel"];
    patch: operations["partialUpdatePatientModel"];
  };
  "/patient/onboarded": {
    get: operations["retrievePatientModel"];
    put: operations["updatePatientModel"];
    delete: operations["destroyPatientModel"];
    patch: operations["partialUpdatePatientModel"];
  };
  "/patient/upload/id/{extension}": {
    get: operations["retrievePatientModel"];
  };
  "/patient/upload/poa/{extension}": {
    get: operations["retrievePatientModel"];
  };
  "/patient/document/{id}": {
    get: operations["retrievePatientModel"];
    delete: operations["destroyPatientModel"];
  };
  "/staff/user": {
    get: operations["retrieveStaffModel"];
    put: operations["updateStaffModel"];
    post: operations["createStaffModel"];
    patch: operations["partialUpdateStaffModel"];
  };
  "/staff/onboarded": {
    get: operations["retrieveStaffModel"];
  };
  "/staff/user/search": {
    get: operations["retrieveStaffModel"];
  };
  "/staff/patient/search": {
    get: operations["listPatientModels"];
  };
  "/analytics/appointment/start-date/{start_date}/end-date/{end_date}/interval/{interval}": {
    get: operations["retrieveAppointmentModel"];
  };
  "/analytics/prescription/start-date/{start_date}/end-date/{end_date}/interval/{interval}": {
    get: operations["retrievePrescriptionModel"];
  };
  "/appointment/{id}/upload/extension/{extension}": {
    get: operations["retrieveAppointmentModel"];
  };
  "/appointment/{id}": {
    get: operations["retrieveAppointmentModel"];
    put: operations["updateAppointmentModel"];
    patch: operations["partialUpdateAppointmentModel"];
  };
  "/appointments": {
    get: operations["listAppointmentModels"];
  };
  "/practice/{id}/appointments/state/{state}": {
    get: operations["retrieveAppointmentModel"];
  };
  "/states/appointment": {
    get: operations["retrieveAppointmentModel"];
  };
  "/appointment/doc/{id}/download": {
    get: operations["retrieveAppointmentModel"];
  };
  "/prescription/{id}": {
    get: operations["retrievePrescriptionModel"];
    put: operations["updatePrescriptionModel"];
    patch: operations["partialUpdatePrescriptionModel"];
  };
  "/prescriptions": {
    get: operations["listPrescriptionModels"];
  };
  "/states/prescription": {
    get: operations["retrievePrescriptionModel"];
  };
  "/practice/{id}/prescriptions/state/{state}": {
    get: operations["retrievePrescriptionModel"];
  };
  "/availability/practice/{practice_id}/member/{team_member_id}": {
    get: operations["retrieveAvailableAppointmentModel"];
  };
  "/availability/{id}/manage": {
    get: operations["retrieveAvailableAppointmentModel"];
    put: operations["updateAvailableAppointmentModel"];
    delete: operations["destroyAvailableAppointmentModel"];
    patch: operations["partialUpdateAvailableAppointmentModel"];
  };
  "/booking/options": {
    get: operations["retrieveBookingModel"];
  };
  "/booking/invitation/{id}/": {
    get: operations["retrieveBookingInviteModel"];
  };
  "/booking/{id}/manage": {
    get: operations["retrieveBookingModel"];
    put: operations["updateBookingModel"];
    delete: operations["destroyBookingModel"];
    patch: operations["partialUpdateBookingModel"];
  };
  "/booking/search": {
    get: operations["retrieveBookingModel"];
  };
  "/sample/get": {
    get: operations["listAuthViewTests"];
  };
  "/practice/create": {
    post: operations["createPracticeModel"];
  };
  "/practices/{id}/create-org": {
    post: operations["createPracticeModel"];
  };
  "/practices/{id}/invite-user": {
    post: operations["createPracticeModel"];
  };
  "/staff/patient/create": {
    post: operations["createPatientModel"];
  };
  "/staff/patient/{patient_id}/appointment/create": {
    post: operations["createAppointmentModel"];
  };
  "/staff/patient/{patient_id}/prescription/create": {
    post: operations["createPrescriptionModel"];
  };
  "/appointment/create/practice/{practice_slug}": {
    post: operations["createAppointmentModel"];
  };
  "/prescription/create/practice/{practice_slug}": {
    post: operations["createPrescriptionModel"];
  };
  "/availability/create": {
    post: operations["createAvailableAppointmentModel"];
  };
  "/booking/create": {
    post: operations["createBookingModel"];
  };
  "/booking/invitation/create/appointment/{id}/": {
    post: operations["createBookingModel"];
  };
  "/practices/{id}/delete-org": {
    delete: operations["destroyPracticeModel"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    Practice: {
      address_line_1: string;
      address_line_2: string;
      city: string;
      state: string;
      zip_code: string;
      country: string;
      latitude?: number;
      longitude?: number;
      id?: number;
      org_id?: string;
      name: string;
      slug?: string;
      team_members: {
          id?: number;
          first_name: string;
          last_name: string;
          job_title: string;
          bio?: string;
          /** Format: date-time */
          created_at?: string;
          /** Format: date-time */
          updated_at?: string;
        }[];
      opening_hours: {
          id?: number;
          day_of_week: number;
          start_time?: string;
          end_time?: string;
          is_closed: boolean;
          /** Format: date-time */
          created_at?: string;
          /** Format: date-time */
          updated_at?: string;
        }[];
      opening_time_exceptions: {
          id?: number;
          /** Format: date */
          start_datetime?: string;
          /** Format: date */
          end_datetime?: string;
          is_closed: boolean;
          reason: string;
          /** Format: date-time */
          created_at?: string;
          /** Format: date-time */
          updated_at?: string;
        }[];
      contact_options: {
          id?: number;
          name: string;
          value: string;
          href_type: string;
          /** Format: date-time */
          created_at?: string;
          /** Format: date-time */
          updated_at?: string;
        }[];
      notices: {
          id?: number;
          title: string;
          description_markdown: string;
          /** Format: date-time */
          created_at?: string;
          /** Format: date-time */
          updated_at?: string;
        }[];
      feature_flags: {
          id?: number;
          practice_id?: number;
          flag_id: string;
          flag_value: boolean;
          /** Format: date-time */
          created_at?: string;
          /** Format: date-time */
          updated_at?: string;
        }[];
      /** Format: date-time */
      created_at?: string;
      /** Format: date-time */
      updated_at?: string;
    };
    AllFeatureFlags: {
      flags: {
          id?: number;
          practice_id?: number;
          flag_id: string;
          flag_value: boolean;
          /** Format: date-time */
          created_at?: string;
          /** Format: date-time */
          updated_at?: string;
        }[];
    };
    Patient: {
      address_line_1: string;
      address_line_2: string;
      city: string;
      state: string;
      zip_code: string;
      country: string;
      latitude?: number;
      longitude?: number;
      id?: number;
      first_name: string;
      last_name: string;
      full_name?: string;
      /** Format: email */
      email: string;
      phone: string;
      /** Format: date */
      date_of_birth: string;
      gender: string;
      health_care_number?: string;
      documents?: {
          id?: number;
          download_url: string;
          state?: string;
          /** Format: date-time */
          uploaded_at?: string;
          is_id: boolean;
          is_proof_of_address: boolean;
        }[];
    };
    Onboarded: {
      has_onboarded: boolean;
    };
    StaffMember: {
      id?: number;
      practice_id?: number;
      first_name: string;
      last_name: string;
      job_title: string;
      /** Format: email */
      email: string;
      bio?: string;
      full_name?: string;
    };
    AppointmentAnalyticsSchema: {
      count_by_state: {
          by: string;
          value: number;
        }[];
      overall_count: {
          /** Format: date-time */
          date: string;
          value: number;
        }[];
      avg_time_in_state: {
          by: string;
          value: number;
        }[];
    };
    PrescriptionAnalyticsSchema: {
      count_by_state: {
          by: string;
          value: number;
        }[];
      overall_count: {
          /** Format: date-time */
          date: string;
          value: number;
        }[];
      avg_time_in_state: {
          by: string;
          value: number;
        }[];
    };
    Appointment: {
      id?: number;
      symptoms: string;
      symptom_category: string;
      symptoms_duration_seconds: number;
      priority?: number | null;
      state?: string;
      patient_id?: number;
      practice_id?: number;
      documents?: {
          id?: number;
          download_url: string;
          /** Format: date-time */
          uploaded_at?: string;
        }[];
      /** Format: date-time */
      created_at?: string;
      /** Format: date-time */
      updated_at?: string;
      assigned_to_id?: number | null;
      logs?: {
          id?: number;
          from_state?: string;
          to_state: string;
          triggered_by_id: number;
          triggered_by?: {
            readonly id?: number;
            readonly first_name: string;
            readonly last_name: string;
            readonly full_name?: string;
            /** Format: email */
            readonly email: string;
          };
          /** Format: date-time */
          created_at?: string;
          /** Format: date-time */
          transition_away_at?: string;
          transition_delta?: number;
          appointment_id: number;
        }[];
      comments?: {
          id?: number;
          user_id?: number;
          user?: {
            readonly id?: number;
            readonly first_name: string;
            readonly last_name: string;
            readonly full_name?: string;
            /** Format: email */
            readonly email: string;
          };
          /** Format: date-time */
          created_at?: string;
          /** Format: date-time */
          updated_at?: string;
          comment: string;
          appointment_id: number;
        }[];
      patient?: {
        address_line_1: string;
        address_line_2: string;
        city: string;
        state: string;
        zip_code: string;
        country: string;
        latitude?: number;
        longitude?: number;
        id?: number;
        first_name: string;
        last_name: string;
        full_name?: string;
        /** Format: email */
        email: string;
        phone: string;
        /** Format: date */
        date_of_birth: string;
        gender: string;
        health_care_number?: string;
        documents?: {
            id?: number;
            download_url: string;
            state?: string;
            /** Format: date-time */
            uploaded_at?: string;
            is_id: boolean;
            is_proof_of_address: boolean;
          }[];
      };
      assigned_to?: {
        id?: number;
        first_name: string;
        last_name: string;
        full_name?: string;
        /** Format: email */
        email: string;
      } | null;
      assign_history?: {
          id?: number;
          /** Format: date-time */
          created_at?: string;
          triggered_by?: {
            readonly id?: number;
            readonly first_name: string;
            readonly last_name: string;
            readonly full_name?: string;
            /** Format: email */
            readonly email: string;
          };
          from_user?: {
            readonly id?: number;
            readonly first_name: string;
            readonly last_name: string;
            readonly full_name?: string;
            /** Format: email */
            readonly email: string;
          };
          to_user?: {
            readonly id?: number;
            readonly first_name: string;
            readonly last_name: string;
            readonly full_name?: string;
            /** Format: email */
            readonly email: string;
          };
          appointment_id: number;
        }[];
      viewed_logs?: {
          id?: number;
          viewed_by?: {
            readonly id?: number;
            readonly first_name: string;
            readonly last_name: string;
            readonly full_name?: string;
            /** Format: email */
            readonly email: string;
          };
          /** Format: date-time */
          created_at?: string;
          appointment_id: number;
        }[];
    };
    States: {
      states: {
          id: string;
          name: string;
          description: string;
        }[];
    };
    Prescription: {
      id?: number;
      items: {
          id?: number;
          name: string;
          quantity: number;
          /** Format: date-time */
          created_at?: string;
          /** Format: date-time */
          updated_at?: string;
        }[];
      pharmacy: {
        address_line_1: string;
        address_line_2: string;
        city: string;
        state: string;
        zip_code: string;
        country: string;
        latitude?: number;
        longitude?: number;
        id?: number;
        name: string;
        /** Format: date-time */
        created_at?: string;
        /** Format: date-time */
        updated_at?: string;
      };
      state?: string;
      patient_id?: number;
      practice_id?: number;
      /** Format: date-time */
      created_at?: string;
      /** Format: date-time */
      updated_at?: string;
      assigned_to_id?: number | null;
      logs?: {
          id?: number;
          from_state?: string;
          to_state: string;
          triggered_by_id: number;
          triggered_by?: {
            readonly id?: number;
            readonly first_name: string;
            readonly last_name: string;
            readonly full_name?: string;
            /** Format: email */
            readonly email: string;
          };
          /** Format: date-time */
          created_at?: string;
          /** Format: date-time */
          transition_away_at?: string;
          transition_delta?: number;
          prescription_id: number;
        }[];
      comments?: {
          id?: number;
          user_id?: number;
          user?: {
            readonly id?: number;
            readonly first_name: string;
            readonly last_name: string;
            readonly full_name?: string;
            /** Format: email */
            readonly email: string;
          };
          /** Format: date-time */
          created_at?: string;
          /** Format: date-time */
          updated_at?: string;
          comment: string;
          prescription_id: number;
        }[];
      patient?: {
        address_line_1: string;
        address_line_2: string;
        city: string;
        state: string;
        zip_code: string;
        country: string;
        latitude?: number;
        longitude?: number;
        id?: number;
        first_name: string;
        last_name: string;
        full_name?: string;
        /** Format: email */
        email: string;
        phone: string;
        /** Format: date */
        date_of_birth: string;
        gender: string;
        health_care_number?: string;
        documents?: {
            id?: number;
            download_url: string;
            state?: string;
            /** Format: date-time */
            uploaded_at?: string;
            is_id: boolean;
            is_proof_of_address: boolean;
          }[];
      };
      assigned_to?: {
        id?: number;
        first_name: string;
        last_name: string;
        full_name?: string;
        /** Format: email */
        email: string;
      } | null;
      assign_history?: {
          id?: number;
          /** Format: date-time */
          created_at?: string;
          triggered_by?: {
            readonly id?: number;
            readonly first_name: string;
            readonly last_name: string;
            readonly full_name?: string;
            /** Format: email */
            readonly email: string;
          };
          from_user?: {
            readonly id?: number;
            readonly first_name: string;
            readonly last_name: string;
            readonly full_name?: string;
            /** Format: email */
            readonly email: string;
          };
          to_user?: {
            readonly id?: number;
            readonly first_name: string;
            readonly last_name: string;
            readonly full_name?: string;
            /** Format: email */
            readonly email: string;
          };
          prescription_id: number;
        }[];
      viewed_logs?: {
          id?: number;
          viewed_by?: {
            readonly id?: number;
            readonly first_name: string;
            readonly last_name: string;
            readonly full_name?: string;
            /** Format: email */
            readonly email: string;
          };
          /** Format: date-time */
          created_at?: string;
          prescription_id: number;
        }[];
    };
    Availability: {
      id?: number;
      staff_id?: number;
      practice_id?: number;
      team_member_id: number;
      /** Format: date-time */
      start_time: string;
      /** Format: date-time */
      end_time: string;
      /** Format: date-time */
      schedule_release_time?: string;
      team_member?: {
        readonly id?: number;
        readonly first_name: string;
        readonly last_name: string;
        readonly job_title: string;
        readonly bio?: string;
        /** Format: date-time */
        readonly created_at?: string;
        /** Format: date-time */
        readonly updated_at?: string;
      };
      /** Format: date-time */
      created_at?: string;
      /** Format: date-time */
      updated_at?: string;
    };
    BookingInvite: {
      id?: number;
      appointment_id: number;
      appointment?: {
        readonly id?: number;
        readonly symptoms: string;
        readonly symptom_category: string;
        readonly symptoms_duration_seconds: number;
        readonly priority?: number | null;
        readonly state?: string;
        readonly patient_id?: number;
        readonly practice_id?: number;
        readonly documents?: {
            id?: number;
            download_url: string;
            /** Format: date-time */
            uploaded_at?: string;
          }[];
        /** Format: date-time */
        readonly created_at?: string;
        /** Format: date-time */
        readonly updated_at?: string;
        readonly assigned_to_id?: number | null;
        readonly logs?: {
            id?: number;
            from_state?: string;
            to_state: string;
            triggered_by_id: number;
            triggered_by?: {
              readonly id?: number;
              readonly first_name: string;
              readonly last_name: string;
              readonly full_name?: string;
              /** Format: email */
              readonly email: string;
            };
            /** Format: date-time */
            created_at?: string;
            /** Format: date-time */
            transition_away_at?: string;
            transition_delta?: number;
            appointment_id: number;
          }[];
        readonly comments?: {
            id?: number;
            user_id?: number;
            user?: {
              readonly id?: number;
              readonly first_name: string;
              readonly last_name: string;
              readonly full_name?: string;
              /** Format: email */
              readonly email: string;
            };
            /** Format: date-time */
            created_at?: string;
            /** Format: date-time */
            updated_at?: string;
            comment: string;
            appointment_id: number;
          }[];
        readonly patient?: {
          address_line_1: string;
          address_line_2: string;
          city: string;
          state: string;
          zip_code: string;
          country: string;
          latitude?: number;
          longitude?: number;
          id?: number;
          first_name: string;
          last_name: string;
          full_name?: string;
          /** Format: email */
          email: string;
          phone: string;
          /** Format: date */
          date_of_birth: string;
          gender: string;
          health_care_number?: string;
          documents?: {
              id?: number;
              download_url: string;
              state?: string;
              /** Format: date-time */
              uploaded_at?: string;
              is_id: boolean;
              is_proof_of_address: boolean;
            }[];
        };
        readonly assigned_to?: {
          id?: number;
          first_name: string;
          last_name: string;
          full_name?: string;
          /** Format: email */
          email: string;
        } | null;
        readonly assign_history?: {
            id?: number;
            /** Format: date-time */
            created_at?: string;
            triggered_by?: {
              readonly id?: number;
              readonly first_name: string;
              readonly last_name: string;
              readonly full_name?: string;
              /** Format: email */
              readonly email: string;
            };
            from_user?: {
              readonly id?: number;
              readonly first_name: string;
              readonly last_name: string;
              readonly full_name?: string;
              /** Format: email */
              readonly email: string;
            };
            to_user?: {
              readonly id?: number;
              readonly first_name: string;
              readonly last_name: string;
              readonly full_name?: string;
              /** Format: email */
              readonly email: string;
            };
            appointment_id: number;
          }[];
        readonly viewed_logs?: {
            id?: number;
            viewed_by?: {
              readonly id?: number;
              readonly first_name: string;
              readonly last_name: string;
              readonly full_name?: string;
              /** Format: email */
              readonly email: string;
            };
            /** Format: date-time */
            created_at?: string;
            appointment_id: number;
          }[];
      };
      practice_id: number;
      staff_id: number;
      staff?: {
        readonly id?: number;
        readonly practice_id?: number;
        readonly first_name: string;
        readonly last_name: string;
        readonly job_title: string;
        /** Format: email */
        readonly email: string;
        readonly bio?: string;
        readonly full_name?: string;
      };
      can_book?: boolean;
      /** Format: date-time */
      created_at?: string;
      /** Format: date-time */
      updated_at?: string;
    };
    Booking: {
      id?: number;
      appointment_id: number;
      available_appointment_id: number;
      appointment?: {
        readonly id?: number;
        readonly symptoms: string;
        readonly symptom_category: string;
        readonly symptoms_duration_seconds: number;
        readonly priority?: number | null;
        readonly state?: string;
        readonly patient_id?: number;
        readonly practice_id?: number;
        readonly documents?: {
            id?: number;
            download_url: string;
            /** Format: date-time */
            uploaded_at?: string;
          }[];
        /** Format: date-time */
        readonly created_at?: string;
        /** Format: date-time */
        readonly updated_at?: string;
        readonly assigned_to_id?: number | null;
        readonly logs?: {
            id?: number;
            from_state?: string;
            to_state: string;
            triggered_by_id: number;
            triggered_by?: {
              readonly id?: number;
              readonly first_name: string;
              readonly last_name: string;
              readonly full_name?: string;
              /** Format: email */
              readonly email: string;
            };
            /** Format: date-time */
            created_at?: string;
            /** Format: date-time */
            transition_away_at?: string;
            transition_delta?: number;
            appointment_id: number;
          }[];
        readonly comments?: {
            id?: number;
            user_id?: number;
            user?: {
              readonly id?: number;
              readonly first_name: string;
              readonly last_name: string;
              readonly full_name?: string;
              /** Format: email */
              readonly email: string;
            };
            /** Format: date-time */
            created_at?: string;
            /** Format: date-time */
            updated_at?: string;
            comment: string;
            appointment_id: number;
          }[];
        readonly patient?: {
          address_line_1: string;
          address_line_2: string;
          city: string;
          state: string;
          zip_code: string;
          country: string;
          latitude?: number;
          longitude?: number;
          id?: number;
          first_name: string;
          last_name: string;
          full_name?: string;
          /** Format: email */
          email: string;
          phone: string;
          /** Format: date */
          date_of_birth: string;
          gender: string;
          health_care_number?: string;
          documents?: {
              id?: number;
              download_url: string;
              state?: string;
              /** Format: date-time */
              uploaded_at?: string;
              is_id: boolean;
              is_proof_of_address: boolean;
            }[];
        };
        readonly assigned_to?: {
          id?: number;
          first_name: string;
          last_name: string;
          full_name?: string;
          /** Format: email */
          email: string;
        } | null;
        readonly assign_history?: {
            id?: number;
            /** Format: date-time */
            created_at?: string;
            triggered_by?: {
              readonly id?: number;
              readonly first_name: string;
              readonly last_name: string;
              readonly full_name?: string;
              /** Format: email */
              readonly email: string;
            };
            from_user?: {
              readonly id?: number;
              readonly first_name: string;
              readonly last_name: string;
              readonly full_name?: string;
              /** Format: email */
              readonly email: string;
            };
            to_user?: {
              readonly id?: number;
              readonly first_name: string;
              readonly last_name: string;
              readonly full_name?: string;
              /** Format: email */
              readonly email: string;
            };
            appointment_id: number;
          }[];
        readonly viewed_logs?: {
            id?: number;
            viewed_by?: {
              readonly id?: number;
              readonly first_name: string;
              readonly last_name: string;
              readonly full_name?: string;
              /** Format: email */
              readonly email: string;
            };
            /** Format: date-time */
            created_at?: string;
            appointment_id: number;
          }[];
      };
      available_appointment?: {
        readonly id?: number;
        readonly staff_id?: number;
        readonly practice_id?: number;
        readonly team_member_id: number;
        /** Format: date-time */
        readonly start_time: string;
        /** Format: date-time */
        readonly end_time: string;
        /** Format: date-time */
        readonly schedule_release_time?: string;
        readonly team_member?: {
          readonly id?: number;
          readonly first_name: string;
          readonly last_name: string;
          readonly job_title: string;
          readonly bio?: string;
          /** Format: date-time */
          readonly created_at?: string;
          /** Format: date-time */
          readonly updated_at?: string;
        };
        /** Format: date-time */
        readonly created_at?: string;
        /** Format: date-time */
        readonly updated_at?: string;
      };
      invitation_id: number;
      invitation?: {
        readonly id?: number;
        readonly appointment_id: number;
        readonly appointment?: {
          readonly id?: number;
          readonly symptoms: string;
          readonly symptom_category: string;
          readonly symptoms_duration_seconds: number;
          readonly priority?: number | null;
          readonly state?: string;
          readonly patient_id?: number;
          readonly practice_id?: number;
          readonly documents?: {
              id?: number;
              download_url: string;
              /** Format: date-time */
              uploaded_at?: string;
            }[];
          /** Format: date-time */
          readonly created_at?: string;
          /** Format: date-time */
          readonly updated_at?: string;
          readonly assigned_to_id?: number | null;
          readonly logs?: {
              id?: number;
              from_state?: string;
              to_state: string;
              triggered_by_id: number;
              triggered_by?: {
                readonly id?: number;
                readonly first_name: string;
                readonly last_name: string;
                readonly full_name?: string;
                /** Format: email */
                readonly email: string;
              };
              /** Format: date-time */
              created_at?: string;
              /** Format: date-time */
              transition_away_at?: string;
              transition_delta?: number;
              appointment_id: number;
            }[];
          readonly comments?: {
              id?: number;
              user_id?: number;
              user?: {
                readonly id?: number;
                readonly first_name: string;
                readonly last_name: string;
                readonly full_name?: string;
                /** Format: email */
                readonly email: string;
              };
              /** Format: date-time */
              created_at?: string;
              /** Format: date-time */
              updated_at?: string;
              comment: string;
              appointment_id: number;
            }[];
          readonly patient?: {
            address_line_1: string;
            address_line_2: string;
            city: string;
            state: string;
            zip_code: string;
            country: string;
            latitude?: number;
            longitude?: number;
            id?: number;
            first_name: string;
            last_name: string;
            full_name?: string;
            /** Format: email */
            email: string;
            phone: string;
            /** Format: date */
            date_of_birth: string;
            gender: string;
            health_care_number?: string;
            documents?: {
                id?: number;
                download_url: string;
                state?: string;
                /** Format: date-time */
                uploaded_at?: string;
                is_id: boolean;
                is_proof_of_address: boolean;
              }[];
          };
          readonly assigned_to?: {
            id?: number;
            first_name: string;
            last_name: string;
            full_name?: string;
            /** Format: email */
            email: string;
          } | null;
          readonly assign_history?: {
              id?: number;
              /** Format: date-time */
              created_at?: string;
              triggered_by?: {
                readonly id?: number;
                readonly first_name: string;
                readonly last_name: string;
                readonly full_name?: string;
                /** Format: email */
                readonly email: string;
              };
              from_user?: {
                readonly id?: number;
                readonly first_name: string;
                readonly last_name: string;
                readonly full_name?: string;
                /** Format: email */
                readonly email: string;
              };
              to_user?: {
                readonly id?: number;
                readonly first_name: string;
                readonly last_name: string;
                readonly full_name?: string;
                /** Format: email */
                readonly email: string;
              };
              appointment_id: number;
            }[];
          readonly viewed_logs?: {
              id?: number;
              viewed_by?: {
                readonly id?: number;
                readonly first_name: string;
                readonly last_name: string;
                readonly full_name?: string;
                /** Format: email */
                readonly email: string;
              };
              /** Format: date-time */
              created_at?: string;
              appointment_id: number;
            }[];
        };
        readonly practice_id: number;
        readonly staff_id: number;
        readonly staff?: {
          readonly id?: number;
          readonly practice_id?: number;
          readonly first_name: string;
          readonly last_name: string;
          readonly job_title: string;
          /** Format: email */
          readonly email: string;
          readonly bio?: string;
          readonly full_name?: string;
        };
        readonly can_book?: boolean;
        /** Format: date-time */
        readonly created_at?: string;
        /** Format: date-time */
        readonly updated_at?: string;
      };
      booked_by?: {
        readonly id?: number;
        readonly first_name: string;
        readonly last_name: string;
        readonly full_name?: string;
        /** Format: email */
        readonly email: string;
      };
      attendance_status?: string;
      /** Format: date-time */
      created_at?: string;
      /** Format: date-time */
      updated_at?: string;
    };
    InviteUser: {
      /** Format: email */
      email: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  retrievePracticeModel: {
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["AllFeatureFlags"];
        };
      };
    };
  };
  updatePracticeModel: {
    parameters: {
      path: {
        /** @description A unique integer value identifying this practice model. */
        id: string;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["Practice"];
        "application/x-www-form-urlencoded": components["schemas"]["Practice"];
        "multipart/form-data": components["schemas"]["Practice"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Practice"];
        };
      };
    };
  };
  destroyPracticeModel: {
    parameters: {
      path: {
        /** @description A unique integer value identifying this practice model. */
        id: string;
      };
    };
    responses: {
      204: {
        content: never;
      };
    };
  };
  partialUpdatePracticeModel: {
    parameters: {
      path: {
        /** @description A unique integer value identifying this practice model. */
        id: string;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["Practice"];
        "application/x-www-form-urlencoded": components["schemas"]["Practice"];
        "multipart/form-data": components["schemas"]["Practice"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Practice"];
        };
      };
    };
  };
  listPracticeModels: {
    parameters: {
      query?: {
        /** @description A page number within the paginated result set. */
        page?: number;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": {
            /** @example 123 */
            count?: number;
            /**
             * Format: uri
             * @example http://api.example.org/accounts/?page=4
             */
            next?: string | null;
            /**
             * Format: uri
             * @example http://api.example.org/accounts/?page=2
             */
            previous?: string | null;
            results?: components["schemas"]["Practice"][];
          };
        };
      };
    };
  };
  retrievePatientModel: {
    parameters: {
      path: {
        /** @description A unique integer value identifying this patient model. */
        id: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Patient"];
        };
      };
    };
  };
  updatePatientModel: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["Onboarded"];
        "application/x-www-form-urlencoded": components["schemas"]["Onboarded"];
        "multipart/form-data": components["schemas"]["Onboarded"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Onboarded"];
        };
      };
    };
  };
  createPatientModel: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["Patient"];
        "application/x-www-form-urlencoded": components["schemas"]["Patient"];
        "multipart/form-data": components["schemas"]["Patient"];
      };
    };
    responses: {
      201: {
        content: {
          "application/json": components["schemas"]["Patient"];
        };
      };
    };
  };
  destroyPatientModel: {
    parameters: {
      path: {
        /** @description A unique integer value identifying this patient model. */
        id: string;
      };
    };
    responses: {
      204: {
        content: never;
      };
    };
  };
  partialUpdatePatientModel: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["Onboarded"];
        "application/x-www-form-urlencoded": components["schemas"]["Onboarded"];
        "multipart/form-data": components["schemas"]["Onboarded"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Onboarded"];
        };
      };
    };
  };
  retrieveStaffModel: {
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["StaffMember"];
        };
      };
    };
  };
  updateStaffModel: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["StaffMember"];
        "application/x-www-form-urlencoded": components["schemas"]["StaffMember"];
        "multipart/form-data": components["schemas"]["StaffMember"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["StaffMember"];
        };
      };
    };
  };
  createStaffModel: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["StaffMember"];
        "application/x-www-form-urlencoded": components["schemas"]["StaffMember"];
        "multipart/form-data": components["schemas"]["StaffMember"];
      };
    };
    responses: {
      201: {
        content: {
          "application/json": components["schemas"]["StaffMember"];
        };
      };
    };
  };
  partialUpdateStaffModel: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["StaffMember"];
        "application/x-www-form-urlencoded": components["schemas"]["StaffMember"];
        "multipart/form-data": components["schemas"]["StaffMember"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["StaffMember"];
        };
      };
    };
  };
  listPatientModels: {
    parameters: {
      query?: {
        /** @description A page number within the paginated result set. */
        page?: number;
        /** @description Which field to use when ordering the results. */
        ordering?: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": {
            /** @example 123 */
            count?: number;
            /**
             * Format: uri
             * @example http://api.example.org/accounts/?page=4
             */
            next?: string | null;
            /**
             * Format: uri
             * @example http://api.example.org/accounts/?page=2
             */
            previous?: string | null;
            results?: components["schemas"]["Patient"][];
          };
        };
      };
    };
  };
  retrieveAppointmentModel: {
    parameters: {
      path: {
        /** @description A unique integer value identifying this appointment model. */
        id: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Appointment"];
        };
      };
    };
  };
  retrievePrescriptionModel: {
    parameters: {
      query?: {
        /** @description Which field to use when ordering the results. */
        ordering?: string;
      };
      path: {
        /** @description A unique integer value identifying this prescription model. */
        id: string;
        state: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Prescription"];
        };
      };
    };
  };
  updateAppointmentModel: {
    parameters: {
      path: {
        /** @description A unique integer value identifying this appointment model. */
        id: string;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["Appointment"];
        "application/x-www-form-urlencoded": components["schemas"]["Appointment"];
        "multipart/form-data": components["schemas"]["Appointment"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Appointment"];
        };
      };
    };
  };
  partialUpdateAppointmentModel: {
    parameters: {
      path: {
        /** @description A unique integer value identifying this appointment model. */
        id: string;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["Appointment"];
        "application/x-www-form-urlencoded": components["schemas"]["Appointment"];
        "multipart/form-data": components["schemas"]["Appointment"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Appointment"];
        };
      };
    };
  };
  listAppointmentModels: {
    parameters: {
      query?: {
        /** @description A page number within the paginated result set. */
        page?: number;
        /** @description Which field to use when ordering the results. */
        ordering?: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": {
            /** @example 123 */
            count?: number;
            /**
             * Format: uri
             * @example http://api.example.org/accounts/?page=4
             */
            next?: string | null;
            /**
             * Format: uri
             * @example http://api.example.org/accounts/?page=2
             */
            previous?: string | null;
            results?: components["schemas"]["Appointment"][];
          };
        };
      };
    };
  };
  updatePrescriptionModel: {
    parameters: {
      path: {
        /** @description A unique integer value identifying this prescription model. */
        id: string;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["Prescription"];
        "application/x-www-form-urlencoded": components["schemas"]["Prescription"];
        "multipart/form-data": components["schemas"]["Prescription"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Prescription"];
        };
      };
    };
  };
  partialUpdatePrescriptionModel: {
    parameters: {
      path: {
        /** @description A unique integer value identifying this prescription model. */
        id: string;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["Prescription"];
        "application/x-www-form-urlencoded": components["schemas"]["Prescription"];
        "multipart/form-data": components["schemas"]["Prescription"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Prescription"];
        };
      };
    };
  };
  listPrescriptionModels: {
    parameters: {
      query?: {
        /** @description A page number within the paginated result set. */
        page?: number;
        /** @description Which field to use when ordering the results. */
        ordering?: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": {
            /** @example 123 */
            count?: number;
            /**
             * Format: uri
             * @example http://api.example.org/accounts/?page=4
             */
            next?: string | null;
            /**
             * Format: uri
             * @example http://api.example.org/accounts/?page=2
             */
            previous?: string | null;
            results?: components["schemas"]["Prescription"][];
          };
        };
      };
    };
  };
  retrieveAvailableAppointmentModel: {
    parameters: {
      path: {
        /** @description A unique integer value identifying this available appointment model. */
        id: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Availability"];
        };
      };
    };
  };
  updateAvailableAppointmentModel: {
    parameters: {
      path: {
        /** @description A unique integer value identifying this available appointment model. */
        id: string;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["Availability"];
        "application/x-www-form-urlencoded": components["schemas"]["Availability"];
        "multipart/form-data": components["schemas"]["Availability"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Availability"];
        };
      };
    };
  };
  destroyAvailableAppointmentModel: {
    parameters: {
      path: {
        /** @description A unique integer value identifying this available appointment model. */
        id: string;
      };
    };
    responses: {
      204: {
        content: never;
      };
    };
  };
  partialUpdateAvailableAppointmentModel: {
    parameters: {
      path: {
        /** @description A unique integer value identifying this available appointment model. */
        id: string;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["Availability"];
        "application/x-www-form-urlencoded": components["schemas"]["Availability"];
        "multipart/form-data": components["schemas"]["Availability"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Availability"];
        };
      };
    };
  };
  retrieveBookingModel: {
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Booking"];
        };
      };
    };
  };
  retrieveBookingInviteModel: {
    parameters: {
      path: {
        /** @description A unique integer value identifying this booking invite model. */
        id: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["BookingInvite"];
        };
      };
    };
  };
  updateBookingModel: {
    parameters: {
      path: {
        /** @description A unique integer value identifying this booking model. */
        id: string;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["Booking"];
        "application/x-www-form-urlencoded": components["schemas"]["Booking"];
        "multipart/form-data": components["schemas"]["Booking"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Booking"];
        };
      };
    };
  };
  destroyBookingModel: {
    parameters: {
      path: {
        /** @description A unique integer value identifying this booking model. */
        id: string;
      };
    };
    responses: {
      204: {
        content: never;
      };
    };
  };
  partialUpdateBookingModel: {
    parameters: {
      path: {
        /** @description A unique integer value identifying this booking model. */
        id: string;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["Booking"];
        "application/x-www-form-urlencoded": components["schemas"]["Booking"];
        "multipart/form-data": components["schemas"]["Booking"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Booking"];
        };
      };
    };
  };
  listAuthViewTests: {
    responses: {
      200: {
        content: {
          "application/json": unknown[];
        };
      };
    };
  };
  createPracticeModel: {
    parameters: {
      path: {
        /** @description A unique integer value identifying this practice model. */
        id: string;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["InviteUser"];
        "application/x-www-form-urlencoded": components["schemas"]["InviteUser"];
        "multipart/form-data": components["schemas"]["InviteUser"];
      };
    };
    responses: {
      201: {
        content: {
          "application/json": components["schemas"]["InviteUser"];
        };
      };
    };
  };
  createAppointmentModel: {
    parameters: {
      path: {
        practice_slug: string;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["Appointment"];
        "application/x-www-form-urlencoded": components["schemas"]["Appointment"];
        "multipart/form-data": components["schemas"]["Appointment"];
      };
    };
    responses: {
      201: {
        content: {
          "application/json": components["schemas"]["Appointment"];
        };
      };
    };
  };
  createPrescriptionModel: {
    parameters: {
      path: {
        practice_slug: string;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["Prescription"];
        "application/x-www-form-urlencoded": components["schemas"]["Prescription"];
        "multipart/form-data": components["schemas"]["Prescription"];
      };
    };
    responses: {
      201: {
        content: {
          "application/json": components["schemas"]["Prescription"];
        };
      };
    };
  };
  createAvailableAppointmentModel: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["Availability"];
        "application/x-www-form-urlencoded": components["schemas"]["Availability"];
        "multipart/form-data": components["schemas"]["Availability"];
      };
    };
    responses: {
      201: {
        content: {
          "application/json": components["schemas"]["Availability"];
        };
      };
    };
  };
  createBookingModel: {
    parameters: {
      path: {
        /** @description A unique integer value identifying this booking model. */
        id: string;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["BookingInvite"];
        "application/x-www-form-urlencoded": components["schemas"]["BookingInvite"];
        "multipart/form-data": components["schemas"]["BookingInvite"];
      };
    };
    responses: {
      201: {
        content: {
          "application/json": components["schemas"]["BookingInvite"];
        };
      };
    };
  };
}
