apiVersion: apps/v1
kind: Deployment
metadata:
  name: react-customer-webapp-deployment
  namespace: default
  labels:
    app: react-customer-webapp
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: react-customer-webapp
  template:
    metadata:
      labels:
        app: react-customer-webapp
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "false"
    spec:
      terminationGracePeriodSeconds: 300
      nodeSelector:
        nodeType: general-purpose
      imagePullSecrets:
        - name: docker-cfg
      containers:
        - name: customer-webapp-docker-image
          image: DOCKER_REGISTRY_URL:DOCKER_VERSION
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: "250m"
              memory: "100M"
            limits:
              cpu: "500m"
              memory: "1000M"
          ports:
            - containerPort: 3000
          env:
            - name: NEXT_PUBLIC_DATADOG_VERSION
              value: DATADOG_VERSION_VAL
          readinessProbe:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 30
            periodSeconds: 20
          livenessProbe:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 15
            periodSeconds: 120

---
apiVersion: v1
kind: Service
metadata:
  name: customer-webapp-load-balancer
spec:
  selector:
    app: react-customer-webapp
  ports:
    - port: 80
      name: http
      targetPort: 3000
    - port: 443
      name: https
      targetPort: 3000
  type: LoadBalancer
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: customer-ingress
  annotations:
    cert-manager.io/issuer: "cloudflare-cluster-issuer"
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/proxy-buffers-number: "4"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "16k"
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - gpbase.co.uk
        - www.gpbase.co.uk
      secretName: cloudflare-cluster-issuer
  rules:
    - host: www.gpbase.co.uk
      http:
        paths:
          - path: /?(.*)
            pathType: Prefix
            backend:
              service:
                name: customer-webapp-load-balancer
                port:
                  number: 80
    - host: gpbase.co.uk
      http:
        paths:
          - path: /?(.*)
            pathType: Prefix
            backend:
              service:
                name: customer-webapp-load-balancer
                port:
                  number: 80
